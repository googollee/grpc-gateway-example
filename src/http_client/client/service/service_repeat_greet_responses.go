// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"grpc_gateway/http_client/models"
)

// ServiceRepeatGreetReader is a Reader for the ServiceRepeatGreet structure.
type ServiceRepeatGreetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServiceRepeatGreetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServiceRepeatGreetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewServiceRepeatGreetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewServiceRepeatGreetOK creates a ServiceRepeatGreetOK with default headers values
func NewServiceRepeatGreetOK() *ServiceRepeatGreetOK {
	return &ServiceRepeatGreetOK{}
}

/*ServiceRepeatGreetOK handles this case with default header values.

A successful response.(streaming responses)
*/
type ServiceRepeatGreetOK struct {
	Payload *ServiceRepeatGreetOKBody
}

func (o *ServiceRepeatGreetOK) Error() string {
	return fmt.Sprintf("[GET /v1/service/greet][%d] serviceRepeatGreetOK  %+v", 200, o.Payload)
}

func (o *ServiceRepeatGreetOK) GetPayload() *ServiceRepeatGreetOKBody {
	return o.Payload
}

func (o *ServiceRepeatGreetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ServiceRepeatGreetOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceRepeatGreetDefault creates a ServiceRepeatGreetDefault with default headers values
func NewServiceRepeatGreetDefault(code int) *ServiceRepeatGreetDefault {
	return &ServiceRepeatGreetDefault{
		_statusCode: code,
	}
}

/*ServiceRepeatGreetDefault handles this case with default header values.

An unexpected error response.
*/
type ServiceRepeatGreetDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// Code gets the status code for the service repeat greet default response
func (o *ServiceRepeatGreetDefault) Code() int {
	return o._statusCode
}

func (o *ServiceRepeatGreetDefault) Error() string {
	return fmt.Sprintf("[GET /v1/service/greet][%d] Service_RepeatGreet default  %+v", o._statusCode, o.Payload)
}

func (o *ServiceRepeatGreetDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ServiceRepeatGreetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ServiceRepeatGreetOKBody Stream result of serviceGreetResponse
swagger:model ServiceRepeatGreetOKBody
*/
type ServiceRepeatGreetOKBody struct {

	// error
	Error *models.RPCStatus `json:"error,omitempty"`

	// result
	Result *models.ServiceGreetResponse `json:"result,omitempty"`
}

// Validate validates this service repeat greet o k body
func (o *ServiceRepeatGreetOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ServiceRepeatGreetOKBody) validateError(formats strfmt.Registry) error {

	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("serviceRepeatGreetOK" + "." + "error")
			}
			return err
		}
	}

	return nil
}

func (o *ServiceRepeatGreetOKBody) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(o.Result) { // not required
		return nil
	}

	if o.Result != nil {
		if err := o.Result.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("serviceRepeatGreetOK" + "." + "result")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ServiceRepeatGreetOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ServiceRepeatGreetOKBody) UnmarshalBinary(b []byte) error {
	var res ServiceRepeatGreetOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
