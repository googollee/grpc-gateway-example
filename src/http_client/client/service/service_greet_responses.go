// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"grpc_gateway/http_client/models"
)

// ServiceGreetReader is a Reader for the ServiceGreet structure.
type ServiceGreetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServiceGreetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServiceGreetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewServiceGreetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewServiceGreetOK creates a ServiceGreetOK with default headers values
func NewServiceGreetOK() *ServiceGreetOK {
	return &ServiceGreetOK{}
}

/*ServiceGreetOK handles this case with default header values.

A successful response.
*/
type ServiceGreetOK struct {
	Payload *models.ServiceGreetResponse
}

func (o *ServiceGreetOK) Error() string {
	return fmt.Sprintf("[POST /v1/service/greet][%d] serviceGreetOK  %+v", 200, o.Payload)
}

func (o *ServiceGreetOK) GetPayload() *models.ServiceGreetResponse {
	return o.Payload
}

func (o *ServiceGreetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceGreetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceGreetDefault creates a ServiceGreetDefault with default headers values
func NewServiceGreetDefault(code int) *ServiceGreetDefault {
	return &ServiceGreetDefault{
		_statusCode: code,
	}
}

/*ServiceGreetDefault handles this case with default header values.

An unexpected error response.
*/
type ServiceGreetDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// Code gets the status code for the service greet default response
func (o *ServiceGreetDefault) Code() int {
	return o._statusCode
}

func (o *ServiceGreetDefault) Error() string {
	return fmt.Sprintf("[POST /v1/service/greet][%d] Service_Greet default  %+v", o._statusCode, o.Payload)
}

func (o *ServiceGreetDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ServiceGreetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
